% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.CESKalman.R
\name{plot.CESKalman}
\alias{plot.CESKalman}
\title{Function for plotting the model fit and trend/price decomposition of a CESKalman object}
\usage{
plot.CESKalman(Kalman,t0=1,tEnd=nrow(Kalman$data))
}
\arguments{
\item{Kalman}{an object of class CESKalman returned from the CESKalman function}

\item{t0}{Start date. Only available for yearly data, else it is an index}

\item{tEnd}{End date. Only available for yearly data, else it is an index}
}
\description{
The first plot contains the model fit of the relative quantities. The second is a decomposition of the fitted values in a price and a trend component.
The third plot is the demeaned-data series applied in estimation.
}
\details{
\strong{NOTE:}
As we are primarily interested to explain the model fit of the relative quantities, the estimated equation is first translated into quantities, denoted \eqn{x_t}:
\eqn{\Delta x_{t}=\alpha(x_{t-1}+\sigma p_{t-1}-\mu_{t-1})+(\kappa_{i}-1)\Delta p_{t}+\epsilon_t}. Note that nlags=0 is currently only available option.

This constitutes a differential equation. The fitted values can be decomposed into two terms, \eqn{\hat{x}_t=\hat{x}_t^{Trend}+\hat{x}_t^{Price}}.
The trend component is \eqn{\hat{x}_t^{Trend}\equiv \hat{x}_0(1+\hat{\alpha})^t-\hat{\alpha}\sum_{s=1}^{t}\hat{\mu}_{s-1} *(1+\hat{\alpha})^{t-s}}.
The price component is \eqn{\hat{x}_t^{Price}\equiv \sum_{s=1}^t(\hat{\alpha}\hat{\sigma}p_{s-1}+(\hat{\kappa}-1)\Delta p_s)(1+\hat{\alpha})^{t-s}}
For now, the function can only handle yearly data, if you want to specify the start and end date. If using data
at another frequency, you will have to use the default t0 and tEnd. In addition, the function is only suitable when nlags=0.
}
\examples{
## First, data is loaded with the Load_Data function (or any other data set)
data = Load_Data(Country="USA",tstart=1970,tend=2017)

data = data.frame(data)

data = cbind(data$q,data$w,data$K,data$L)

## The second step is a call to the CESKalman function
Kalman = CESKalman(data,grid.lambda=c(10,1000,20),lambda_est_freely = F,max_nlags=0)

## Lastly we can plot the fit of the model:
plot(Kalman)

}
\references{
Kronborg et al (2019) and Kastrup et al (2021)
}
\author{
Christian Sandholm Kastrup <CST@dreamgruppen.dk>, Anders Farver Kronborg <ANK@dreamgruppen.dk> and Peter Philip Stephensen <PSP@dreamgruppen.dk>
}
